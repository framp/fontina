{"name":"Fontina","tagline":"Make your fonts ready for @font-face!","body":"Fontina make your fonts ready for @font-face!\r\n\r\nFontina generates .ttf, .otf, .svg, .woff, .eot fonts from a font supported by fontforge.\r\n\r\nA stylesheet will be created as well.\r\n\r\n##Requirements\r\n\r\nBefore using fontina you need to install:\r\n\r\n - Fontforge:   http://fontforge.sourceforge.net/\r\n - ttf2eot:     http://code.google.com/p/ttf2eot/)\r\n - sfnt2woff:   http://people.mozilla.com/~jkew/woff/\r\n\r\n##Basic usage\r\n    var fontina = require('fontina');\r\n    var options = {};\r\n    fontina('./fonts/font.ttf', './public/fonts', options);\r\n\r\nFontina will do the rest.\r\n\r\nThe options object can be configured as follow:\r\n\r\n    {\r\n      force: false,   // if true the file extension won't be checked\r\n      output: false,  // if true the output from the tool will be printed\r\n      error: false,   // if true the errors from the tool will be printed\r\n      cwd: null       // current directory from which the tool are run\r\n    }\r\n\r\n##Integration with Grunt    \r\n \r\nInstall [grunt-fontina](http://github.com/framp/grunt-fontina) to automate your workflow.\r\n\r\n    npm install --save grunt-fontina\r\n    \r\nLoad a new task in your `Gruntfile.js`:\r\n\r\n    grunt.loadNpmTasks('grunt-fontina');\r\n\r\nAdd a configuration block for fontina:\r\n\r\n    fontina: {\r\n          fonts: {\r\n            src: './fonts',           //Source directory\r\n            dest: './public/fonts',   //Output directory\r\n            options: {                //Fontina options object\r\n              output: true\r\n            }\r\n          }\r\n        }","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}